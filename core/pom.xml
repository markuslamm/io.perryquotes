<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>io.perryquotes</groupId>
		<artifactId>parent</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<artifactId>core</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>io.perryquotes core-module</name>
	<description>io.perryquotes core-module</description>

	<properties>
		<db.username>jooq</db.username>
		<db.password>jooq</db.password>
		<testcontainers.postgres.image>postgres:15.1-alpine</testcontainers.postgres.image>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jooq</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-reflect</artifactId>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib-jdk8</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-configuration-processor</artifactId>
			<optional>true</optional>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.perryquotes</groupId>
			<artifactId>test-utils</artifactId>
			<version>0.0.1-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.testcontainers</groupId>
				<artifactId>testcontainers-bom</artifactId>
				<version>${testcontainers.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
		<testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>
		<plugins>
			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>compile</id>
						<phase>compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<args>
						<arg>-Xjsr305=strict</arg>
					</args>
					<compilerPlugins>
						<plugin>spring</plugin>
					</compilerPlugins>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.jetbrains.kotlin</groupId>
						<artifactId>kotlin-maven-allopen</artifactId>
						<version>${kotlin.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.codehaus.gmaven</groupId>
				<artifactId>groovy-maven-plugin</artifactId>
				<version>2.1.1</version>
				<executions>
					<execution>
						<id>testcontainer-start</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>import org.testcontainers.containers.PostgreSQLContainer

							db = new PostgreSQLContainer("${testcontainers.postgres.image}")
									.withUsername("${db.username}")
									.withDatabaseName("postgres")
									.withPassword("${db.password}")

							db.start()
							project.properties.setProperty('db.url', db.getJdbcUrl())
							project.properties.setProperty('testcontainer.containerid', db.getContainerId())
							project.properties.setProperty('testcontainer.imageName', db.getDockerImageName())
							</source>
						</configuration>
					</execution>
					<execution>
						<id>testcontainer-stop</id>
						<phase>compile</phase>
						<goals>
							<goal>execute</goal>
						</goals>
						<configuration>
							<source>import org.testcontainers.utility.ResourceReaper

							containerId = "${testcontainer.containerid}"
							imageName = "${testcontainer.imageName}"
							println("Stopping testcontainer $containerId - $imageName")
							ResourceReaper
									.instance()
									.stopAndRemoveContainer(containerId, imageName)
							</source>
						</configuration>
					</execution>

				</executions>

				<dependencies>
					<dependency>
						<groupId>org.testcontainers</groupId>
						<artifactId>postgresql</artifactId>
						<version>${testcontainers.version}</version>
					</dependency>
				</dependencies>
			</plugin>

			<plugin>
				<groupId>org.flywaydb</groupId>
				<artifactId>flyway-maven-plugin</artifactId>
				<version>${flyway.version}</version>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>migrate</goal>
						</goals>
						<configuration>
							<url>${db.url}</url>
							<user>${db.username}</user>
							<password>${db.password}</password>
							<locations>
								<location>filesystem:src/main/resources/db/migration</location>
							</locations>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.jooq</groupId>
				<artifactId>jooq-codegen-maven</artifactId>

				<executions>
					<execution>
						<id>java-generator</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>

						<configuration>
							<jdbc>
								<url>${db.url}</url>
								<user>${db.username}</user>
								<password>${db.password}</password>
							</jdbc>
							<generator>
								<name>org.jooq.codegen.KotlinGenerator</name>
								<strategy>
									<matchers>
										<tables>
											<table>
												<expression></expression>
												<pojoClass>
													<transform>PASCAL</transform>
													<expression>$0_Entity</expression>
												</pojoClass>
											</table>
										</tables>

									</matchers>
								</strategy>
								<database>
									<inputSchema>public</inputSchema>
									<excludes>flyway_schema_history</excludes>
								</database>
								<target>
									<packageName>io.perryquotes.core.jooq</packageName>
									<directory>target/generated-sources/jooq</directory>
								</target>
								<generate>
									<pojos>true</pojos>
									<daos>false</daos>
									<records>false</records>
									<pojosEqualsAndHashCode>true</pojosEqualsAndHashCode>
									<javaTimeTypes>true</javaTimeTypes>
									<fluentSetters>true</fluentSetters>
								</generate>
							</generator>
						</configuration>
					</execution>
				</executions>
			</plugin>


			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

</project>
